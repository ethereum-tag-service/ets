name: Solidity screener

env:
  MNEMONIC_LOCAL: test test test test test test test test test test test junk
  ETHERNAL_DISABLED: true

on:
  push:
  pull_request:

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      contracts: ${{ steps.filter.outputs.contracts }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            contracts:
              - 'packages/contracts/contracts/**'

  screener:
    name: Solhint & Tests
    needs: changes
    if: ${{ needs.changes.outputs.contracts == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Clear pnpm cache and store
        run: |
          pnpm store path | xargs -I {} bash -c 'if [ -d "{}" ]; then pnpm store prune; fi'
          pnpm store path | xargs -I {} bash -c 'if [ -d "{}" ]; then rm -rf "{}"; fi'

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Debug package.json
        run: cat package.json

      - name: Debug pnpm-lock.yaml
        run: cat pnpm-lock.yaml

      - name: Debug installed versions
        run: pnpm list esbuild

      - name: Run Solhint
        run: |
          cd packages/contracts/
          pnpm run solhint

      - name: Run Tests
        run: |
          cd packages/contracts
          pnpm run test
