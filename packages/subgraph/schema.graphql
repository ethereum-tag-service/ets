enum TargetType {
  URL
  BLINK
  UNKNOWN
}

enum BlinkChainAssetType {
  TXN
  BLOCK
  WALLET
  RECORD
  TOKEN
  NFT
  UNKNOWN
}

#input SampleRequest {
#  id: String
#}
#
#input PublisherRequest {
#  publisher_: SampleRequest
#}

#interface TargetTypeInterface {
#  id: ID!
#  typeName: TargetType!
#}
#
#type TargetTypeMisc implements TargetTypeInterface @entity {
#  id: ID!
#  typeName: TargetType!
#}
#
#type TargetTypeBlink implements TargetTypeInterface @entity {
#  "Id of target"
#  id: ID!
#
#  "String identifier for TargetType."
#  typeName: TargetType!
#
#  "The value of the chainName property MUST refer to a specific Blockchain or DLT type. Possible examples include bitcoin, ethereum, or hyperledger-indy."
#  chainName: String!
#
#  "The value of the chainNetwork property MUST refer to a specific operational network of the preceding chainName. Possible examples include mainnet, testnet, or ropsten."
#  chainNetwork: String!
#
#  "The value of the chainAssetId property MUST refer to a specific asset from the preceding chainNetwork from the preceding chainName. chainAssetId SHALL be well defined by a specific Blink chain specification in order to reference available assets. Assets MAY include blocks, transactions, smart contracts, or other available assets depending on the DLT. The necessary information needed to look up a given asset MAY include multiple asset ID's, as seperated by a :. A possible example includes abc123:321cba if looking up transaction 321cba on block abc123."
#  chainAssetId: String!
#
#  "Type of chain asset, taken from BlinkChainAssetType enum"
#  chainAssetType: BlinkChainAssetType!
#
#  "Arbitrary additional identifier for extending chainAssetType. For example Lens Publication"
#  chainAssetSubtype: String!
#}

type Target @entity {
  "Id of Target"
  id: ID!

  "Target creation date."
  created: BigInt!

  "Wallet address of Target creator. Usually ETS Core contract."
  createdBy: String!

  "URI of target."
  targetURI: String!

  "Type of URI, limited to TargetType enumerated values."
  targetType: TargetType!

  "Keywords about target, derived from URI."
  targetTypeKeywords: [String!]

  "Target has been enriched using ETSEnrichTargetAPI."
  enriched: BigInt!

  "HTTP Status code returned from ETSEnrichTargetAPI for targetURI."
  httpStatus: BigInt!

  "IPFS pointer to metadata json extracted for targetURI by ETSEnrichTargetAPI."
  metadataURI: String!
}

#rename to tag
type Tag @entity {
  "CTAG token ID."
  id: ID!

  "Tag string lowercased."
  machineName: String!

  "Display version of CTAG at point of creation."
  display: String!

  "Current owner of CTAG."
  owner: Owner!

  "Wallet credited with creating CTAG."
  creator: Creator!

  "Contract address of Publisher that facilitated CTAG creation."
  publisher: Publisher!

  "Creation date."
  timestamp: BigInt!

  "Flagged by ETS as Premium."
  premium: Boolean!

  "Flagged by ETS as Reserved."
  reserved: Boolean!

  "Number of times CTAG has been used to tag content."
  tagAppliedInTaggingRecord: BigInt!

  "Number of times CTAG has been removed from tagging record."
  tagRemovedFromTaggingRecord: BigInt!

  "Total owner revenue from tagging fees for CTAG. Aggregates across all owners."
  ownerRevenue: BigInt!

  "Total original Publisher publisher revenue from tagging fees for CTAG."
  publisherRevenue: BigInt!

  "Total protocol revenue from tagging fees for CTAG."
  protocolRevenue: BigInt!

  "Total creator revenue from tagging fees for CTAG."
  creatorRevenue: BigInt!

  "Tagging records containing this CTAG."
  taggingRecords: [TaggingRecord!]! @derivedFrom(field: "tags")
}

type TaggingRecord @entity {
  "Tagging Record Id."
  id: ID!

  "Entity relationship field for CTAGs used in tagging record."
  tags: [Tag!]

  "Tagging record target as entity relationship."
  target: Target!

  "Arbitrary identifier for type of tagging record."
  recordType: String!

  "Tagger (wallet address that triggered tagging record) entity relationship."
  tagger: Tagger!

  "Publisher (address of contract that facilitated tagging record creation) entity relationship."
  publisher: Publisher!

  "Tagging record creation date."
  timestamp: BigInt!
}

type Administrator @entity {
  id: ID!
  firstSeen: BigInt!
}

type Platform @entity {
  id: ID!
  address: String!
  firstSeen: BigInt!

  "Total count of CTAGs created on ETS."
  tagsCount: BigInt!

  "Total count of tagging records on ETS."
  taggingRecordsCount: BigInt!

  "Total revenue generated from CTAG auctions."
  auctionRevenue: BigInt!

  "Total revenue generated from tagging fees."
  taggingFeesRevenue: BigInt!
}

type PublisherAdmin @entity {
  id: ID!
  firstSeen: BigInt!
}

type Publisher @entity {
  "Address of Publisher contract."
  id: ID!

  "Name of Publisher."
  name: String!

  "Publisher contract is paused."
  pausedByProtocol: Boolean!

  "Publisher contract paused by owner"
  pausedByOwner: Boolean

  "Owner of publisher contract"
  owner: String!

  "Initial creator of publisher contract"
  creator: String!

  "Publisher is a protocol address for testing purposes."
  admin: Boolean!

  "Publisher creation date."
  firstSeen: BigInt!

  "Total number of CTAGs published by Publisher."
  tagsPublished: BigInt!

  "Total number of Tagging Records published by Publisher."
  taggingRecordsPublished: BigInt!

  "Total lifetime Tagging Record interactions."
  taggingRecordTxns: BigInt!

  "Total lifetime count of tags applied in tagging records."
  tagsApplied: BigInt!

  "Total lifetime count of tags removed from tagging records."
  tagsRemoved: BigInt!

  "Total revenue generated from CTAG auctions for tags published by Publisher."
  publishedTagsAuctionRevenue: BigInt!

  "Total number of tags published by Publisher added to Tagging Records"
  publishedTagsAddedToTaggingRecords: BigInt!

  "Total number of tags published by Publisher removed from Tagging Records"
  publishedTagsRemovedFromTaggingRecords: BigInt!

  "Total revenue generated from tagging fees from tags published by Publisher."
  publishedTagsTaggingFeeRevenue: BigInt!

  "Tagging records published by this Publisher."
  taggingRecords: [TaggingRecord!]! @derivedFrom(field: "publisher")

  "CTAGs published by this Publisher."
  tags: [Tag!]! @derivedFrom(field: "publisher")
}

type Tagger @entity {
  "Tagger address."
  id: ID!

  "Tagger creation date."
  firstSeen: BigInt!

  "Total number of Tagging Records created."
  taggingRecordsCreated: BigInt!

  "Total lifetime Tagging Record interactions."
  taggingRecordTxns: BigInt!

  "Total lifetime count of tags applied in tagging records."
  tagsApplied: BigInt!

  "Total lifetime count of tags removed from tagging records."
  tagsRemoved: BigInt!

  "Total lifetime tagging fees paid."
  feesPaid: BigInt!

  "Tags applied by this Tagger"
  tags: [Tag!]!

  "Tagging records created by this Tagger."
  taggingRecords: [TaggingRecord!]! @derivedFrom(field: "tagger")
}

type Creator @entity {
  "Address of Creator"
  id: ID!

  "Creator creation date."
  firstSeen: BigInt!

  "Total number of CTAGs created."
  tagsCreated: BigInt!

  "Total number of tags created added to Tagging Records."
  createdTagsAddedToTaggingRecords: BigInt!

  "Total number of tags created removed from Tagging Records."
  createdTagsRemovedFromTaggingRecords: BigInt!

  "Total revenue generated from CTAG auctions for tags created by Creator."
  createdTagsAuctionRevenue: BigInt!

  "Total revenue generated from tagging fees from tags created by Creator."
  createdTagsTaggingFeeRevenue: BigInt!

  "CTAGs created by this Creator."
  tags: [Tag!]! @derivedFrom(field: "creator")
}

type Owner @entity {
  "Address of Owner"
  id: ID!

  "Owner creation date."
  firstSeen: BigInt!

  "Current number of CTAGs owned."
  tagsOwned: BigInt!

  "Lifetime total of CTAGs owned."
  tagsOwnedLifeTime: BigInt!

  "Total number of owner tags added to Tagging Records."
  ownedTagsAddedToTaggingRecords: BigInt!

  "Total number of owner tags removed from Tagging Records."
  ownedTagsRemovedFromTaggingRecords: BigInt!

  "Total tagging fee revenue generated from owned tags."
  ownedTagsTaggingFeeRevenue: BigInt!

  "CTAGs owned by this Owner."
  tags: [Tag!]! @derivedFrom(field: "owner")
}

type Release @entity {
  id: ID!
  #Contract Versions
  ets: String!
  etsVersion: BigInt!
  etsVersionDate: BigInt!

  etsAccessControls: String!
  etsAccessControlsVersion: BigInt!
  etsAccessControlsVersionDate: BigInt!

  etsToken: String!
  etsTokenVersion: BigInt!
  etsTokenVersionDate: BigInt!

  etsTarget: String!
  etsTargetVersion: BigInt!
  etsTargetVersionDate: BigInt!
}

type GlobalSettings @entity {
  id: ID!

  # Tags
  tagMinStringLength: BigInt!
  tagMaxStringLength: BigInt!
  ownershipTermLength: BigInt!

  # Tagging
  taggingFee: BigInt!
  taggingFeePlatformPercentage: BigInt!
  taggingFeePublisherPercentage: BigInt!

  # Auction
  timeBuffer: BigInt!
  reservePrice: BigInt!
  minIncrementBidPercentage: BigInt!
  duration: BigInt!
  publisherPercentage: BigInt!
  creatorPercentage: BigInt!
  platformPercentage: BigInt!
}
