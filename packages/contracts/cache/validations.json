{
  "version": "3.2",
  "log": [
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9ec71edaf62048369a9c97ecabf684d4a7002bc7150fa21afc1642349ab58852",
          "withoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359",
          "linkedWithoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "a9c35036319c1a1d53c45782d09ba760d0582082ba0aee3f4de67db399b240a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "27210701ab8adab68df737fcb0c870a767a8b1b24c3cb6ce2ceec78bdaf92b4e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableMock": {
        "src": "contracts/mocks/ERC721BurnableMock.sol:8",
        "version": {
          "withMetadata": "6dabcc8f8486e71d13a88268055f254d89d28f307e6801ff9a6d3017cfd4212a",
          "withoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5",
          "linkedWithoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5"
        },
        "inherit": [
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "exists(uint256)",
          "mint(address,uint256)",
          "safeMint(address,uint256)",
          "safeMint(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721BurnableMock",
            "src": "contracts/mocks/ERC721BurnableMock.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721ReceiverMock": {
        "src": "contracts/mocks/ERC721ReceiverMock.sol:7",
        "version": {
          "withMetadata": "d76f03f8d0b4846cb25179db40ac117fd91e1f114f41218c893eba5c6ece3658",
          "withoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7",
          "linkedWithoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7"
        },
        "inherit": [
          "IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "(bytes4,uint8)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721ReceiverMock",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_retval",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_error",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IETSTargetType": {
        "src": "contracts/dev/IETSTargetType.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTargetURI(string)",
          "pauseTargetType()",
          "targetTypePaused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "dddbf8a1401045b12792a9c6c5da5ac8a07b5458b22efafb1f2605b24133c88e",
          "withoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831",
          "linkedWithoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4397",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5283",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4534",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4397": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5283": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4534": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "2d3b43b79f0485157af74cd1f11d5a8b7413b78d8e7e8d3f7864c665f5e9b8dd",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4397",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4267",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4397": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4267": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4397",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4630_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4397": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4630_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4630_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "12d2e0e5bdfefa2acd7e208ee66a9a7dea0c392b6774b42988842d6971cb9832",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "1d2d9944486e43b28b6cb5ceee156b940d9d0de34e0c431c22f9045f4d5039d0",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "fe55e15da6e5119a4afac21ae9f34855a44e60802fc8986040ce595e985f5f1e",
          "withoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be",
          "linkedWithoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "LinkTokenReceiver": {
        "src": "@chainlink/contracts/src/v0.6/LinkTokenReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@chainlink/contracts/src/v0.6/LinkTokenReceiver.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "src": "@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathChainlink": {
        "src": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol:17",
        "version": {
          "withMetadata": "401d81917e9cb91bc69b031d97691eed08995995d424bf9caec3aa7ae37ebcb4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MockOracle": {
        "src": "contracts/mocks/MockOracle.sol:13",
        "version": {
          "withMetadata": "e232d4d998106241b8ff0fe51067d6188fd3d46bed0d6709fd4f791a869f5691",
          "withoutMetadata": "e8277bdbe87464f8189d9c11dab278e39e8f996c7f24bf316ebdd332e760d255",
          "linkedWithoutMetadata": "e8277bdbe87464f8189d9c11dab278e39e8f996c7f24bf316ebdd332e760d255"
        },
        "inherit": [
          "LinkTokenReceiver",
          "ChainlinkRequestInterface"
        ],
        "libraries": [
          "SafeMathChainlink"
        ],
        "methods": [
          "(address)",
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest(bytes32,bytes32)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mocks/MockOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MockOracle",
              "label": "LinkToken",
              "type": "t_contract(LinkTokenInterface)234",
              "src": "contracts/mocks/MockOracle.sol:24"
            },
            {
              "contract": "MockOracle",
              "label": "commitments",
              "type": "t_mapping(t_bytes32,t_struct(Request)398_storage)",
              "src": "contracts/mocks/MockOracle.sol:25"
            }
          ],
          "types": {
            "t_contract(LinkTokenInterface)234": {
              "label": "contract LinkTokenInterface"
            },
            "t_mapping(t_bytes32,t_struct(Request)398_storage)": {
              "label": "mapping(bytes32 => struct MockOracle.Request)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(Request)398_storage": {
              "label": "struct MockOracle.Request",
              "members": [
                {
                  "label": "callbackAddr",
                  "type": "t_address"
                },
                {
                  "label": "callbackFunctionId",
                  "type": "t_bytes4"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes4": {
              "label": "bytes4"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC677Token": {
        "src": "@chainlink/token/contracts/v0.4/ERC677Token.sol:8",
        "inherit": [
          "ERC677",
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkToken": {
        "src": "@chainlink/token/contracts/v0.4/LinkToken.sol:8",
        "version": {
          "withMetadata": "238b1146dc1298829af16d970a72c54dca9488c2422113b21d9e7dbc7fd133d8",
          "withoutMetadata": "13d7d19df21c3a29c2594fc30357455319cb8340c90915aa5d8844dbd61c84c9",
          "linkedWithoutMetadata": "13d7d19df21c3a29c2594fc30357455319cb8340c90915aa5d8844dbd61c84c9"
        },
        "inherit": [
          "ERC677Token",
          "ERC677",
          "linkStandardToken",
          "linkBasicToken",
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "LinkToken()",
          "transferAndCall(address,uint256,bytes)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "linkSafeMath": {
        "src": "@chainlink/token/contracts/v0.4/math/linkSafeMath.sol:8",
        "version": {
          "withMetadata": "48b98810dbbcfa4105b22bcf112afda37c4b82cdc34a1dbf71a4b430061a2508",
          "withoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688",
          "linkedWithoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC677": {
        "src": "@chainlink/token/contracts/v0.4/token/ERC677.sol:5",
        "inherit": [
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC677Receiver": {
        "src": "@chainlink/token/contracts/v0.4/token/ERC677Receiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "linkBasicToken": {
        "src": "@chainlink/token/contracts/v0.4/token/linkBasicToken.sol:12",
        "version": {
          "withMetadata": "a02ce311a9c26695114fd2384ef52ca7b1ac7f1ee99eef00ba751d56e7355e68",
          "withoutMetadata": "be8a558dcb291307823e53e1440f9ce6189e6efb28c2dfd693cf99654ae467c6",
          "linkedWithoutMetadata": "be8a558dcb291307823e53e1440f9ce6189e6efb28c2dfd693cf99654ae467c6"
        },
        "inherit": [
          "linkERC20Basic"
        ],
        "libraries": [
          "linkSafeMath"
        ],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "linkBasicToken",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@chainlink/token/contracts/v0.4/token/linkBasicToken.sol:15"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "linkERC20": {
        "src": "@chainlink/token/contracts/v0.4/token/linkERC20.sol:11",
        "inherit": [
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "linkERC20Basic": {
        "src": "@chainlink/token/contracts/v0.4/token/linkERC20Basic.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "linkERC20Basic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "@chainlink/token/contracts/v0.4/token/linkERC20Basic.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "linkStandardToken": {
        "src": "@chainlink/token/contracts/v0.4/token/linkStandardToken.sol:15",
        "version": {
          "withMetadata": "a82e15269d3206eabd6530cfde9b66b26508eb98e608a3eb5e1749426c471fe6",
          "withoutMetadata": "795e740e656d19c0d0df88fdf3ed96574ddd3a0e4d7360df04690207eb2ede23",
          "linkedWithoutMetadata": "795e740e656d19c0d0df88fdf3ed96574ddd3a0e4d7360df04690207eb2ede23"
        },
        "inherit": [
          "linkBasicToken",
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseApproval(address,uint256)",
          "decreaseApproval(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "linkStandardToken",
              "label": "allowed",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@chainlink/token/contracts/v0.4/token/linkStandardToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "95e13403984e2d047091dce7abd5132f3d057ddefe4eaf008c503890f2571251",
          "withoutMetadata": "9d84fd98ba33fa2d7ac190306ef9c13c50f19d63013a3874f7a51cefabf0517f",
          "linkedWithoutMetadata": "9d84fd98ba33fa2d7ac190306ef9c13c50f19d63013a3874f7a51cefabf0517f"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4463",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5349",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4600",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4463": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5349": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4600": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "17d4ce5c35a565ea7fd254e6be41d39dca998c03b6d54c321942ff6df0249348",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4463",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4333",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4463": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4333": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4463",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4696_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4463": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4696_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4696_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "95e13403984e2d047091dce7abd5132f3d057ddefe4eaf008c503890f2571251",
          "withoutMetadata": "9d84fd98ba33fa2d7ac190306ef9c13c50f19d63013a3874f7a51cefabf0517f",
          "linkedWithoutMetadata": "9d84fd98ba33fa2d7ac190306ef9c13c50f19d63013a3874f7a51cefabf0517f"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4463",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5349",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4600",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4463": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5349": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4600": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "17d4ce5c35a565ea7fd254e6be41d39dca998c03b6d54c321942ff6df0249348",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4463",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4333",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4463": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4333": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4463",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4696_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4463": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4696_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4696_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "882e0e306550d56e71669b9ca6a495d10f1f0e49071b7cb8de6b768b56a64ec0",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "1a8c95f2adbae5010e526bf8daca89ffcab90e265dcd3a52ce461ef77d6f4c2a",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "2feb2a566eedb57ecebf3f7e2d682ce814da082b01b902c7aa7eea600940dacb",
          "withoutMetadata": "c6338145c212e2a59a0f179f9daff47abb3a7c9ecebaa971e85742de311db355",
          "linkedWithoutMetadata": "c6338145c212e2a59a0f179f9daff47abb3a7c9ecebaa971e85742de311db355"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "7165f64f6d6f6936ca6b1177d3986b4ebc0820a4427e6e668eb955440f59e7d1",
          "withoutMetadata": "7397dc4c8b6b9fdb75643b417db8ad77da04de519d61869352df677c2403b8fb",
          "linkedWithoutMetadata": "7397dc4c8b6b9fdb75643b417db8ad77da04de519d61869352df677c2403b8fb"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "fulfillEnsureTarget(uint256,string,uint256)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4438",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5324",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4575",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4438": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5324": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4575": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "6a71bf441b83a1e11938bf4982abcc20beeb5c526a2a9324cc0d700cec1de8ac",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4438",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4308",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4438": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4308": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4438",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4671_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4438": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4671_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4671_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "7165f64f6d6f6936ca6b1177d3986b4ebc0820a4427e6e668eb955440f59e7d1",
          "withoutMetadata": "7397dc4c8b6b9fdb75643b417db8ad77da04de519d61869352df677c2403b8fb",
          "linkedWithoutMetadata": "7397dc4c8b6b9fdb75643b417db8ad77da04de519d61869352df677c2403b8fb"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "fulfillEnsureTarget(uint256,string,uint256)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4438",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5324",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4575",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4438": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5324": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4575": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "6a71bf441b83a1e11938bf4982abcc20beeb5c526a2a9324cc0d700cec1de8ac",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4438",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4308",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4438": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4308": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4438",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4671_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4438": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4671_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4671_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "0b51dbbff74302f5c561a38d02c100f5a042a6886c002a0fb63255bbfa35c0d4",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "dcc97f65e02311bc3cb3bd46368cd6b5f479af952595a8e34588a2cee19c4af7",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "ecbf82e1e65a383352f6a6941b694fde122b6aea8349f2922999fc62877b7bf5",
          "withoutMetadata": "a0367937e8a6b4a86330a4f01471d4e77c1a3528e4349bfd9b21820928350114",
          "linkedWithoutMetadata": "a0367937e8a6b4a86330a4f01471d4e77c1a3528e4349bfd9b21820928350114"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9ec71edaf62048369a9c97ecabf684d4a7002bc7150fa21afc1642349ab58852",
          "withoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359",
          "linkedWithoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "a9c35036319c1a1d53c45782d09ba760d0582082ba0aee3f4de67db399b240a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "27210701ab8adab68df737fcb0c870a767a8b1b24c3cb6ce2ceec78bdaf92b4e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableMock": {
        "src": "contracts/mocks/ERC721BurnableMock.sol:8",
        "version": {
          "withMetadata": "6dabcc8f8486e71d13a88268055f254d89d28f307e6801ff9a6d3017cfd4212a",
          "withoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5",
          "linkedWithoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5"
        },
        "inherit": [
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "exists(uint256)",
          "mint(address,uint256)",
          "safeMint(address,uint256)",
          "safeMint(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721BurnableMock",
            "src": "contracts/mocks/ERC721BurnableMock.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721ReceiverMock": {
        "src": "contracts/mocks/ERC721ReceiverMock.sol:7",
        "version": {
          "withMetadata": "d76f03f8d0b4846cb25179db40ac117fd91e1f114f41218c893eba5c6ece3658",
          "withoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7",
          "linkedWithoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7"
        },
        "inherit": [
          "IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "(bytes4,uint8)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721ReceiverMock",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_retval",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_error",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IETSTargetType": {
        "src": "contracts/dev/IETSTargetType.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTargetURI(string)",
          "pauseTargetType()",
          "targetTypePaused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "750aac6276ad3b5e9e8ece7c2535930c2f795039a5c5600b5c826ba10e5faed9",
          "withoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831",
          "linkedWithoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5279",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4530",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5279": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4530": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "3942520208eda76e0ddab8732e8347cae932ef4abf74c9dbfbfb169618285949",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4263",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4263": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4626_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4626_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4626_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "759f83922de29bc8fde8a662b64353e68b819937b163840df5ab6557809ddf9b",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "a790519bee6db2836564ddd6de3c96b2c94d2e5b4464d218e5af9057f2bfbad6",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "7e247618b8496b175122a5e5b8d6c07945143eed95afe3d9633f81bd08a7e241",
          "withoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be",
          "linkedWithoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "750aac6276ad3b5e9e8ece7c2535930c2f795039a5c5600b5c826ba10e5faed9",
          "withoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831",
          "linkedWithoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5279",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4530",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5279": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4530": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "3942520208eda76e0ddab8732e8347cae932ef4abf74c9dbfbfb169618285949",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4263",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4263": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4626_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4626_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4626_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "750aac6276ad3b5e9e8ece7c2535930c2f795039a5c5600b5c826ba10e5faed9",
          "withoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831",
          "linkedWithoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5279",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4530",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5279": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4530": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "3942520208eda76e0ddab8732e8347cae932ef4abf74c9dbfbfb169618285949",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4263",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4263": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4626_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4626_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4626_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)3315",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)3411_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)3315": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)3411_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)3411_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9ec71edaf62048369a9c97ecabf684d4a7002bc7150fa21afc1642349ab58852",
          "withoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359",
          "linkedWithoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "a9c35036319c1a1d53c45782d09ba760d0582082ba0aee3f4de67db399b240a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "27210701ab8adab68df737fcb0c870a767a8b1b24c3cb6ce2ceec78bdaf92b4e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableMock": {
        "src": "contracts/mocks/ERC721BurnableMock.sol:8",
        "version": {
          "withMetadata": "6dabcc8f8486e71d13a88268055f254d89d28f307e6801ff9a6d3017cfd4212a",
          "withoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5",
          "linkedWithoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5"
        },
        "inherit": [
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "exists(uint256)",
          "mint(address,uint256)",
          "safeMint(address,uint256)",
          "safeMint(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721BurnableMock",
            "src": "contracts/mocks/ERC721BurnableMock.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721ReceiverMock": {
        "src": "contracts/mocks/ERC721ReceiverMock.sol:7",
        "version": {
          "withMetadata": "d76f03f8d0b4846cb25179db40ac117fd91e1f114f41218c893eba5c6ece3658",
          "withoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7",
          "linkedWithoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7"
        },
        "inherit": [
          "IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "(bytes4,uint8)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721ReceiverMock",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_retval",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_error",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IETSTargetType": {
        "src": "contracts/dev/IETSTargetType.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTargetURI(string)",
          "pauseTargetType()",
          "targetTypePaused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "750aac6276ad3b5e9e8ece7c2535930c2f795039a5c5600b5c826ba10e5faed9",
          "withoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831",
          "linkedWithoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5279",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4530",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5279": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4530": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "3942520208eda76e0ddab8732e8347cae932ef4abf74c9dbfbfb169618285949",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4263",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4263": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4626_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4626_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4626_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "759f83922de29bc8fde8a662b64353e68b819937b163840df5ab6557809ddf9b",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "a790519bee6db2836564ddd6de3c96b2c94d2e5b4464d218e5af9057f2bfbad6",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "7e247618b8496b175122a5e5b8d6c07945143eed95afe3d9633f81bd08a7e241",
          "withoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be",
          "linkedWithoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "750aac6276ad3b5e9e8ece7c2535930c2f795039a5c5600b5c826ba10e5faed9",
          "withoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831",
          "linkedWithoutMetadata": "84a772925c585bef8aab334fee240082f8fdf2cd744b29cb30c1023ba5490831"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTagId(string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5279",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4530",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5279": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4530": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "3942520208eda76e0ddab8732e8347cae932ef4abf74c9dbfbfb169618285949",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4263",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4263": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4393",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4626_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4393": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4626_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4626_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "759f83922de29bc8fde8a662b64353e68b819937b163840df5ab6557809ddf9b",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "a790519bee6db2836564ddd6de3c96b2c94d2e5b4464d218e5af9057f2bfbad6",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "7e247618b8496b175122a5e5b8d6c07945143eed95afe3d9633f81bd08a7e241",
          "withoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be",
          "linkedWithoutMetadata": "f0656e11a01865a9484d74f67a270873f95fa73c3caad30b7608624065a640be"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "9e38280d67ece5710dacd77029d2caa02e4429a99c0a1d75fb88155ece430e8f",
          "withoutMetadata": "d9e8b3dadeb4106011a4203b996c88caf62a126f691454dde8fdd3232e740df6",
          "linkedWithoutMetadata": "d9e8b3dadeb4106011a4203b996c88caf62a126f691454dde8fdd3232e740df6"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address,bool)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4370",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5256",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4507",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4370": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5256": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4507": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "5d34ab779dcd47fa41692f6b0fbe9ef44f4ca8d796f4dc87546ef1f5717dddb8",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4370",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4240",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4370": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4240": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4370",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4603_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4370": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4603_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4603_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "6455309a44591991138bc9fb00eba5e7ec8b743aaa5103579fac949678b76806",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "718cc9856ed0195e3e42f5c4c961436880422094d6f6c5bea8bf21d25e2e8c02",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "2caef639992fd695cc1d9b0bada2810a9642d40e0bc5ce3e3ca41765fd181ed2",
          "withoutMetadata": "945ba24fb5341c8def61afa8e47096fad6b54ede2b4a7f71297154d939699c80",
          "linkedWithoutMetadata": "945ba24fb5341c8def61afa8e47096fad6b54ede2b4a7f71297154d939699c80"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9ec71edaf62048369a9c97ecabf684d4a7002bc7150fa21afc1642349ab58852",
          "withoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359",
          "linkedWithoutMetadata": "f497ba308e9a00740d0a55f2085157aa5a434f7629a6e7f1d8211addbb8a5359"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "ERC721",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "contract": "ERC721",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "contract": "ERC721",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "contract": "ERC721",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "contract": "ERC721",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "contract": "ERC721",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "a9c35036319c1a1d53c45782d09ba760d0582082ba0aee3f4de67db399b240a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:186"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "27210701ab8adab68df737fcb0c870a767a8b1b24c3cb6ce2ceec78bdaf92b4e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableMock": {
        "src": "contracts/mocks/ERC721BurnableMock.sol:8",
        "version": {
          "withMetadata": "6dabcc8f8486e71d13a88268055f254d89d28f307e6801ff9a6d3017cfd4212a",
          "withoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5",
          "linkedWithoutMetadata": "024774161421148eeae333ca7a0a1084a4441530ab507224ff3e067dbc3a4ae5"
        },
        "inherit": [
          "ERC721Burnable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "exists(uint256)",
          "mint(address,uint256)",
          "safeMint(address,uint256)",
          "safeMint(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721BurnableMock",
            "src": "contracts/mocks/ERC721BurnableMock.sol:9"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721ReceiverMock": {
        "src": "contracts/mocks/ERC721ReceiverMock.sol:7",
        "version": {
          "withMetadata": "d76f03f8d0b4846cb25179db40ac117fd91e1f114f41218c893eba5c6ece3658",
          "withoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7",
          "linkedWithoutMetadata": "bf27101c38bf43c7f674f1a721d5df32b10c671002bded11987b35f0aba5feb7"
        },
        "inherit": [
          "IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "(bytes4,uint8)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721ReceiverMock",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_retval",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_error",
            "src": "contracts/mocks/ERC721ReceiverMock.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "IETSTargetType": {
        "src": "contracts/dev/IETSTargetType.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTargetURI(string)",
          "pauseTargetType()",
          "targetTypePaused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
            },
            {
              "contract": "AccessControlUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
            }
          ],
          "types": {
            "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(RoleData)43_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32"
                }
              ]
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:19",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC1967UpgradeUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:21",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "UUPSUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:18",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
            },
            {
              "contract": "PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:97"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)49_storage",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:20",
        "version": {
          "withMetadata": "d0a64b02a8a046ffdfee9857cfea4ba8eb5ce3a0527eb0612ef224907cf60f80",
          "withoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45",
          "linkedWithoutMetadata": "f7f06a9e559007e9fb247027fe1090f0fa675cd3427482a91b6a6aa5fbba1c45"
        },
        "inherit": [
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)44_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_array(t_uint256)44_storage": {
              "label": "uint256[44]"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721ReceiverUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "IERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol:11",
        "inherit": [
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC721BurnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:14",
        "inherit": [
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721BurnableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:35"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ERC721PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:17",
        "inherit": [
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC721PausableUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:43"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC721MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol:12",
        "inherit": [
          "IERC721Upgradeable",
          "IERC165Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "22adb96b072b4642a241a07f5454f6254dffe796d834752a43dd6fc50b0cb489",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ContextUpgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "33ea3d7734be733267a0c08611f1a9f553fd075a81e1c3b1234df9e5de2f68ae",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:9",
        "version": {
          "withMetadata": "0a072d2b6a86f31b244b70e9fdaa8c6b2fb2f252f934f915bb74d29479dfdc23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "IERC165Upgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ERC165Upgradeable",
              "label": "__gap",
              "type": "t_array(t_uint256)50_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "b012d7f0e16858b009317256f458296a740a80f2589846c35a55d8bf440ac371",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETS": {
        "src": "contracts/core/ETS.sol:19",
        "version": {
          "withMetadata": "9ff386bf162deefc3efdb093a62bbde7584e9c03202bcf38586408bdfca4478a",
          "withoutMetadata": "b731f29ca24eafd345ad7c343b49f32a21fffa780aff64d3c9b3e560f978b0af",
          "linkedWithoutMetadata": "b731f29ca24eafd345ad7c343b49f32a21fffa780aff64d3c9b3e560f978b0af"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address)",
          "tagTarget(string,string,string,address payable,address)",
          "getTargetId(string,string)",
          "createTarget(string,string)",
          "updateTarget(uint256,string,string,uint256,uint256,string)",
          "drawDown(address payable)",
          "setTaggingFee(uint256)",
          "updateAccessControls(address)",
          "updateETSEnsure(address)",
          "updatePercentages(uint256,uint256)",
          "setTargetType(string,bool)",
          "setPermittedNftChainId(uint256,bool)",
          "totalDue(address)",
          "getTaggingRecord(uint256)",
          "getPermittedNftChainId(uint256)",
          "targetExists(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETS",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4359",
              "src": "contracts/core/ETS.sol:25"
            },
            {
              "contract": "ETS",
              "label": "etsTag",
              "type": "t_contract(ETSTag)5245",
              "src": "contracts/core/ETS.sol:28"
            },
            {
              "contract": "ETS",
              "label": "etsEnsure",
              "type": "t_contract(ETSEnsure)4496",
              "src": "contracts/core/ETS.sol:31"
            },
            {
              "contract": "ETS",
              "label": "platformPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:34"
            },
            {
              "contract": "ETS",
              "label": "publisherPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:37"
            },
            {
              "contract": "ETS",
              "label": "remainingPercentage",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:40"
            },
            {
              "contract": "ETS",
              "label": "taggingCounter",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:43"
            },
            {
              "contract": "ETS",
              "label": "taggingFee",
              "type": "t_uint256",
              "src": "contracts/core/ETS.sol:46"
            },
            {
              "contract": "ETS",
              "label": "accrued",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:49"
            },
            {
              "contract": "ETS",
              "label": "paid",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/core/ETS.sol:52"
            },
            {
              "contract": "ETS",
              "label": "permittedNftChainIds",
              "type": "t_mapping(t_uint256,t_bool)",
              "src": "contracts/core/ETS.sol:55"
            },
            {
              "contract": "ETS",
              "label": "taggingRecords",
              "type": "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)",
              "src": "contracts/core/ETS.sol:58"
            },
            {
              "contract": "ETS",
              "label": "targets",
              "type": "t_mapping(t_uint256,t_struct(Target)3358_storage)",
              "src": "contracts/core/ETS.sol:61"
            },
            {
              "contract": "ETS",
              "label": "targetType",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "src": "contracts/core/ETS.sol:70"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4359": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETSTag)5245": {
              "label": "contract ETSTag"
            },
            "t_contract(ETSEnsure)4496": {
              "label": "contract ETSEnsure"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_uint256,t_struct(TaggingRecord)3345_storage)": {
              "label": "mapping(uint256 => struct ETS.TaggingRecord)"
            },
            "t_struct(TaggingRecord)3345_storage": {
              "label": "struct ETS.TaggingRecord",
              "members": [
                {
                  "label": "etsTagId",
                  "type": "t_uint256"
                },
                {
                  "label": "targetId",
                  "type": "t_uint256"
                },
                {
                  "label": "tagger",
                  "type": "t_address"
                },
                {
                  "label": "publisher",
                  "type": "t_address"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_mapping(t_uint256,t_struct(Target)3358_storage)": {
              "label": "mapping(uint256 => struct ETS.Target)"
            },
            "t_struct(Target)3358_storage": {
              "label": "struct ETS.Target",
              "members": [
                {
                  "label": "targetType",
                  "type": "t_string_storage"
                },
                {
                  "label": "targetURI",
                  "type": "t_string_storage"
                },
                {
                  "label": "created",
                  "type": "t_uint256"
                },
                {
                  "label": "lastEnsured",
                  "type": "t_uint256"
                },
                {
                  "label": "status",
                  "type": "t_uint256"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControls": {
        "src": "contracts/core/ETSAccessControls.sol:12",
        "version": {
          "withMetadata": "1e6b97a915601cec823bfe6185fc07fa729381c84b9335eae0d06232265a4257",
          "withoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b",
          "linkedWithoutMetadata": "48e008b44e7f83c816456c463017a03125a04af4380cd0bfc9c0c1f73143243b"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initialize()",
          "postUpgrade(string)",
          "isSmartContract(address)",
          "isAdmin(address)",
          "isPublisher(address)",
          "version()",
          "upgraded()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSEnsure": {
        "src": "contracts/core/ETSEnsure.sol:14",
        "version": {
          "withMetadata": "238f1dffc55effc1f03c6cc77495b517fedf14abaf3a5694469fd2aed5982bc3",
          "withoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80",
          "linkedWithoutMetadata": "de2bbf3dbb9e068c800acf779e3e06a5d58192ea066c4455534cfd3dc7846a80"
        },
        "inherit": [
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "requestEnsureTarget(uint256)",
          "fulfillEnsureTarget(uint256,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSEnsure",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4359",
              "src": "contracts/core/ETSEnsure.sol:18"
            },
            {
              "contract": "ETSEnsure",
              "label": "ets",
              "type": "t_contract(ETS)4229",
              "src": "contracts/core/ETSEnsure.sol:21"
            },
            {
              "contract": "ETSEnsure",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSEnsure.sol:24"
            }
          ],
          "types": {
            "t_contract(ETSAccessControls)4359": {
              "label": "contract ETSAccessControls"
            },
            "t_contract(ETS)4229": {
              "label": "contract ETS"
            },
            "t_address_payable": {
              "label": "address payable"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "ETSTag": {
        "src": "contracts/core/ETSTag.sol:17",
        "version": {
          "withMetadata": "ecfb37cb221d8082ac0cc33aefab503e749e23a2d515d72a3b5be59bd0af0a4c",
          "withoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d",
          "linkedWithoutMetadata": "900790a36fcc4752f89c678400440fd4923286e3281c33410ab0e5938373973d"
        },
        "inherit": [
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "AddressUpgradeable",
          "StringsUpgradeable",
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize(address,address payable)",
          "supportsInterface(bytes4)",
          "mint(string,address payable,address)",
          "burn(uint256)",
          "renewTag(uint256)",
          "recycleTag(uint256)",
          "pause()",
          "unPause()",
          "setBaseURI(string)",
          "setTagMaxStringLength(uint256)",
          "setOwnershipTermLength(uint256)",
          "setPlatform(address payable)",
          "updateAccessControls(address)",
          "getTagId(string)",
          "exists(uint256)",
          "getPaymentAddresses(uint256)",
          "getCreatorAddress(uint256)",
          "version()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "ETSTag",
              "label": "baseURI",
              "type": "t_string_storage",
              "src": "contracts/core/ETSTag.sol:25"
            },
            {
              "contract": "ETSTag",
              "label": "ownershipTermLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:28"
            },
            {
              "contract": "ETSTag",
              "label": "tokenPointer",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:31"
            },
            {
              "contract": "ETSTag",
              "label": "tagMinStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:34"
            },
            {
              "contract": "ETSTag",
              "label": "tagMaxStringLength",
              "type": "t_uint256",
              "src": "contracts/core/ETSTag.sol:37"
            },
            {
              "contract": "ETSTag",
              "label": "platform",
              "type": "t_address_payable",
              "src": "contracts/core/ETSTag.sol:40"
            },
            {
              "contract": "ETSTag",
              "label": "accessControls",
              "type": "t_contract(ETSAccessControls)4359",
              "src": "contracts/core/ETSTag.sol:43"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToTag",
              "type": "t_mapping(t_uint256,t_struct(Tag)4592_storage)",
              "src": "contracts/core/ETSTag.sol:46"
            },
            {
              "contract": "ETSTag",
              "label": "tagToTokenId",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "src": "contracts/core/ETSTag.sol:49"
            },
            {
              "contract": "ETSTag",
              "label": "tokenIdToLastTransferTime",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/core/ETSTag.sol:52"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_address_payable": {
              "label": "address payable"
            },
            "t_contract(ETSAccessControls)4359": {
              "label": "contract ETSAccessControls"
            },
            "t_mapping(t_uint256,t_struct(Tag)4592_storage)": {
              "label": "mapping(uint256 => struct ETSTag.Tag)"
            },
            "t_struct(Tag)4592_storage": {
              "label": "struct ETSTag.Tag",
              "members": [
                {
                  "label": "originalPublisher",
                  "type": "t_address"
                },
                {
                  "label": "creator",
                  "type": "t_address"
                },
                {
                  "label": "displayVersion",
                  "type": "t_string_storage"
                },
                {
                  "label": "machineName",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "StringHelpers": {
        "src": "contracts/utils/StringHelpers.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSAccessControlsUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:8",
        "version": {
          "withMetadata": "18848af3c5f52cf4e1721191ab63f1cd69bbfe2ffc16b2c3a1e06b4eb8b2baeb",
          "withoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a",
          "linkedWithoutMetadata": "c0e88d96ff677e0f795ff3d19ac31966dd30f56b52b6f190321a0720243e460a"
        },
        "inherit": [
          "ETSAccessControls",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "AccessControlUpgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "IAccessControlUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSTagUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:15",
        "version": {
          "withMetadata": "932027b1540e8821bcd2802809b9d23c0abedb90bcdf01567268af2b2ec9d6ad",
          "withoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76",
          "linkedWithoutMetadata": "3f2fe01305f9ad235acff7d70932db26ae231bec9839739a2dd7f1d2cf30ee76"
        },
        "inherit": [
          "ETSTag",
          "StringHelpers",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ERC721BurnableUpgradeable",
          "ERC721PausableUpgradeable",
          "PausableUpgradeable",
          "ERC721Upgradeable",
          "IERC721MetadataUpgradeable",
          "IERC721Upgradeable",
          "ERC165Upgradeable",
          "IERC165Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ETSUpgrade": {
        "src": "contracts/utils/UUPS/UUPSTesting.sol:22",
        "version": {
          "withMetadata": "4b67fcf38ebf6c0dec6cd6b72a74c04179a8c44cb050ed556c7a37f353c6a824",
          "withoutMetadata": "f8a031f6efe73807ec8909f2b5b2fb0af9959a92982cde075c17adde4ee523f1",
          "linkedWithoutMetadata": "f8a031f6efe73807ec8909f2b5b2fb0af9959a92982cde075c17adde4ee523f1"
        },
        "inherit": [
          "ETS",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "ReentrancyGuardUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "upgradeTest()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6d103664b2dcead53f5ff0a3fb42f8ce0d5589edc3d7bf01cb92ab159fa76c68",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "LinkTokenReceiver": {
        "src": "@chainlink/contracts/src/v0.6/LinkTokenReceiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@chainlink/contracts/src/v0.6/LinkTokenReceiver.sol:35"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ChainlinkRequestInterface": {
        "src": "@chainlink/contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.6/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "SafeMathChainlink": {
        "src": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol:17",
        "version": {
          "withMetadata": "401d81917e9cb91bc69b031d97691eed08995995d424bf9caec3aa7ae37ebcb4",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "MockOracle": {
        "src": "contracts/mocks/MockOracle.sol:13",
        "version": {
          "withMetadata": "e232d4d998106241b8ff0fe51067d6188fd3d46bed0d6709fd4f791a869f5691",
          "withoutMetadata": "e8277bdbe87464f8189d9c11dab278e39e8f996c7f24bf316ebdd332e760d255",
          "linkedWithoutMetadata": "e8277bdbe87464f8189d9c11dab278e39e8f996c7f24bf316ebdd332e760d255"
        },
        "inherit": [
          "LinkTokenReceiver",
          "ChainlinkRequestInterface"
        ],
        "libraries": [
          "SafeMathChainlink"
        ],
        "methods": [
          "(address)",
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest(bytes32,bytes32)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)",
          "getChainlinkToken()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockOracle",
            "src": "contracts/mocks/MockOracle.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "contract": "MockOracle",
              "label": "LinkToken",
              "type": "t_contract(LinkTokenInterface)234",
              "src": "contracts/mocks/MockOracle.sol:24"
            },
            {
              "contract": "MockOracle",
              "label": "commitments",
              "type": "t_mapping(t_bytes32,t_struct(Request)398_storage)",
              "src": "contracts/mocks/MockOracle.sol:25"
            }
          ],
          "types": {
            "t_contract(LinkTokenInterface)234": {
              "label": "contract LinkTokenInterface"
            },
            "t_mapping(t_bytes32,t_struct(Request)398_storage)": {
              "label": "mapping(bytes32 => struct MockOracle.Request)"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_struct(Request)398_storage": {
              "label": "struct MockOracle.Request",
              "members": [
                {
                  "label": "callbackAddr",
                  "type": "t_address"
                },
                {
                  "label": "callbackFunctionId",
                  "type": "t_bytes4"
                }
              ]
            },
            "t_address": {
              "label": "address"
            },
            "t_bytes4": {
              "label": "bytes4"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    },
    {
      "ERC677Token": {
        "src": "@chainlink/token/contracts/v0.4/ERC677Token.sol:8",
        "inherit": [
          "ERC677",
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "LinkToken": {
        "src": "@chainlink/token/contracts/v0.4/LinkToken.sol:8",
        "version": {
          "withMetadata": "238b1146dc1298829af16d970a72c54dca9488c2422113b21d9e7dbc7fd133d8",
          "withoutMetadata": "13d7d19df21c3a29c2594fc30357455319cb8340c90915aa5d8844dbd61c84c9",
          "linkedWithoutMetadata": "13d7d19df21c3a29c2594fc30357455319cb8340c90915aa5d8844dbd61c84c9"
        },
        "inherit": [
          "ERC677Token",
          "ERC677",
          "linkStandardToken",
          "linkBasicToken",
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "LinkToken()",
          "transferAndCall(address,uint256,bytes)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "linkSafeMath": {
        "src": "@chainlink/token/contracts/v0.4/math/linkSafeMath.sol:8",
        "version": {
          "withMetadata": "48b98810dbbcfa4105b22bcf112afda37c4b82cdc34a1dbf71a4b430061a2508",
          "withoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688",
          "linkedWithoutMetadata": "6784c9bdde3ddff1c688b77760f8abee60b5ea4939b980505024050460e92688"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC677": {
        "src": "@chainlink/token/contracts/v0.4/token/ERC677.sol:5",
        "inherit": [
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "ERC677Receiver": {
        "src": "@chainlink/token/contracts/v0.4/token/ERC677Receiver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "linkBasicToken": {
        "src": "@chainlink/token/contracts/v0.4/token/linkBasicToken.sol:12",
        "version": {
          "withMetadata": "a02ce311a9c26695114fd2384ef52ca7b1ac7f1ee99eef00ba751d56e7355e68",
          "withoutMetadata": "be8a558dcb291307823e53e1440f9ce6189e6efb28c2dfd693cf99654ae467c6",
          "linkedWithoutMetadata": "be8a558dcb291307823e53e1440f9ce6189e6efb28c2dfd693cf99654ae467c6"
        },
        "inherit": [
          "linkERC20Basic"
        ],
        "libraries": [
          "linkSafeMath"
        ],
        "methods": [
          "transfer(address,uint256)",
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "linkBasicToken",
              "label": "balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@chainlink/token/contracts/v0.4/token/linkBasicToken.sol:15"
            }
          ],
          "types": {
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_address": {
              "label": "address"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "linkERC20": {
        "src": "@chainlink/token/contracts/v0.4/token/linkERC20.sol:11",
        "inherit": [
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1"
        }
      },
      "linkERC20Basic": {
        "src": "@chainlink/token/contracts/v0.4/token/linkERC20Basic.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "linkERC20Basic",
              "label": "totalSupply",
              "type": "t_uint256",
              "src": "@chainlink/token/contracts/v0.4/token/linkERC20Basic.sol:10"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      },
      "linkStandardToken": {
        "src": "@chainlink/token/contracts/v0.4/token/linkStandardToken.sol:15",
        "version": {
          "withMetadata": "a82e15269d3206eabd6530cfde9b66b26508eb98e608a3eb5e1749426c471fe6",
          "withoutMetadata": "795e740e656d19c0d0df88fdf3ed96574ddd3a0e4d7360df04690207eb2ede23",
          "linkedWithoutMetadata": "795e740e656d19c0d0df88fdf3ed96574ddd3a0e4d7360df04690207eb2ede23"
        },
        "inherit": [
          "linkBasicToken",
          "linkERC20",
          "linkERC20Basic"
        ],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)",
          "increaseApproval(address,uint256)",
          "decreaseApproval(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "contract": "linkStandardToken",
              "label": "allowed",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@chainlink/token/contracts/v0.4/token/linkStandardToken.sol:17"
            }
          ],
          "types": {
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1"
        }
      }
    }
  ]
}