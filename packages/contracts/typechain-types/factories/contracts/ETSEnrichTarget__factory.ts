/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ETSEnrichTarget,
  ETSEnrichTargetInterface,
} from "../../contracts/ETSEnrichTarget";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "targetId",
        type: "uint256",
      },
    ],
    name: "RequestEnrichTarget",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "etsAccessControls",
    outputs: [
      {
        internalType: "contract IETSAccessControls",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "etsTarget",
    outputs: [
      {
        internalType: "contract IETSTarget",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_targetId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_ipfsHash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_httpStatus",
        type: "uint256",
      },
    ],
    name: "fulfillEnrichTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IETSAccessControls",
        name: "_etsAccessControls",
        type: "address",
      },
      {
        internalType: "contract IETSTarget",
        name: "_etsTarget",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_targetId",
        type: "uint256",
      },
    ],
    name: "requestEnrichTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611406610118600039600081816102110152818161029b015281816104e90152818161056e015261065801526114066000f3fe6080604052600436106100965760003560e01c806356c63489116100695780636a34db1c1161004e5780636a34db1c146101705780638299f9f914610190578063a3f4df7e146101b057600080fd5b806356c63489146101185780635b6411ab1461015057600080fd5b80633659cfe61461009b578063485cc955146100bd5780634f1ef286146100dd57806352d1902d146100f0575b600080fd5b3480156100a757600080fd5b506100bb6100b6366004610f3b565b610206565b005b3480156100c957600080fd5b506100bb6100d8366004610f58565b610387565b6100bb6100eb366004611042565b6104de565b3480156100fc57600080fd5b5061010561064b565b6040519081526020015b60405180910390f35b34801561012457600080fd5b50609854610138906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b34801561015c57600080fd5b506100bb61016b3660046110d5565b610710565b34801561017c57600080fd5b506100bb61018b366004611157565b610919565b34801561019c57600080fd5b50609754610138906001600160a01b031681565b3480156101bc57600080fd5b506101f96040518060400160405280600f81526020017f455453456e72696368546172676574000000000000000000000000000000000081525081565b60405161010f91906111c8565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156102995760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102f47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b03161461035f5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610290565b61036881610a26565b6040805160008082526020820190925261038491839190610b04565b50565b600054610100900460ff16158080156103a75750600054600160ff909116105b806103c15750303b1580156103c1575060005460ff166001145b6104335760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610290565b6000805460ff191660011790558015610456576000805461ff0019166101001790555b609780546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff1992831617909255609880549285169290911691909117905580156104d9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561056c5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610290565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105c77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b0316146106325760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610290565b61063b82610a26565b61064782826001610b04565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106eb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610290565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b609754604080517f3c0c4566000000000000000000000000000000000000000000000000000000008152905133926001600160a01b031691633c0c45669160048083019260209291908290030181865afa158015610772573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079691906111db565b6001600160a01b0316146107ec5760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c7920706c6174666f726d206d617920656e7269636820746172676574006044820152606401610290565b6098546040517f1b2d87c3000000000000000000000000000000000000000000000000000000008152600481018690526000916001600160a01b031690631b2d87c390602401600060405180830381865afa15801561084f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610877919081019061123d565b60985481516040517f7ab3f1cd0000000000000000000000000000000000000000000000000000000081529293506001600160a01b0390911691637ab3f1cd916108ce91899190429088908b908b906004016112f7565b6020604051808303816000875af11580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190611352565b505050505050565b6098546040517fcd7c68e2000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b039091169063cd7c68e290602401602060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611352565b15156001146109f05760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207461726765740000000000000000000000000000000000006044820152606401610290565b6040518181527fa769cb5a56651753718b44cdc6b7211e001c6d099d9aa9b1dfcaa19991b66d219060200160405180910390a150565b6097546001600160a01b03166324d7806c336040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab89190611352565b6103845760405162461bcd60e51b815260206004820152600d60248201527f4163636573732064656e696564000000000000000000000000000000000000006044820152606401610290565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b37576104d983610ca4565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b91575060408051601f3d908101601f19168201909252610b8e91810190611374565b60015b610c035760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610290565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610c985760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610290565b506104d9838383610d6f565b6001600160a01b0381163b610d215760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610290565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610d7883610d9a565b600082511180610d855750805b156104d957610d948383610dda565b50505050565b610da381610ca4565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610dff83836040518060600160405280602781526020016113aa60279139610e06565b9392505050565b6060600080856001600160a01b031685604051610e23919061138d565b600060405180830381855af49150503d8060008114610e5e576040519150601f19603f3d011682016040523d82523d6000602084013e610e63565b606091505b5091509150610e7486838387610e7e565b9695505050505050565b60608315610eea578251610ee3576001600160a01b0385163b610ee35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610290565b5081610ef4565b610ef48383610efc565b949350505050565b815115610f0c5781518083602001fd5b8060405162461bcd60e51b815260040161029091906111c8565b6001600160a01b038116811461038457600080fd5b600060208284031215610f4d57600080fd5b8135610dff81610f26565b60008060408385031215610f6b57600080fd5b8235610f7681610f26565b91506020830135610f8681610f26565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610fe357610fe3610f91565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561101257611012610f91565b604052919050565b600067ffffffffffffffff82111561103457611034610f91565b50601f01601f191660200190565b6000806040838503121561105557600080fd5b823561106081610f26565b9150602083013567ffffffffffffffff81111561107c57600080fd5b8301601f8101851361108d57600080fd5b80356110a061109b8261101a565b610fe9565b8181528660208385010111156110b557600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600080606085870312156110eb57600080fd5b84359350602085013567ffffffffffffffff8082111561110a57600080fd5b818701915087601f83011261111e57600080fd5b81358181111561112d57600080fd5b88602082850101111561113f57600080fd5b95986020929092019750949560400135945092505050565b60006020828403121561116957600080fd5b5035919050565b60005b8381101561118b578181015183820152602001611173565b83811115610d945750506000910152565b600081518084526111b4816020860160208601611170565b601f01601f19169290920160200192915050565b602081526000610dff602083018461119c565b6000602082840312156111ed57600080fd5b8151610dff81610f26565b600082601f83011261120957600080fd5b815161121761109b8261101a565b81815284602083860101111561122c57600080fd5b610ef4826020830160208701611170565b60006020828403121561124f57600080fd5b815167ffffffffffffffff8082111561126757600080fd5b9083019060a0828603121561127b57600080fd5b611283610fc0565b82518281111561129257600080fd5b61129e878286016111f8565b82525060208301516112af81610f26565b8060208301525060408301516040820152606083015160608201526080830151828111156112dc57600080fd5b6112e8878286016111f8565b60808301525095945050505050565b86815260a06020820152600061131060a083018861119c565b8660408401528560608401528281036080840152838152838560208301376000602085830101526020601f19601f860116820101915050979650505050505050565b60006020828403121561136457600080fd5b81518015158114610dff57600080fd5b60006020828403121561138657600080fd5b5051919050565b6000825161139f818460208701611170565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205dd403fdf747db11feea131d12d1e4bb2eff386969fcd7b866996b7a4adee52464736f6c634300080c0033";

type ETSEnrichTargetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETSEnrichTargetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETSEnrichTarget__factory extends ContractFactory {
  constructor(...args: ETSEnrichTargetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ETSEnrichTarget> {
    return super.deploy(overrides || {}) as Promise<ETSEnrichTarget>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ETSEnrichTarget {
    return super.attach(address) as ETSEnrichTarget;
  }
  override connect(signer: Signer): ETSEnrichTarget__factory {
    return super.connect(signer) as ETSEnrichTarget__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETSEnrichTargetInterface {
    return new utils.Interface(_abi) as ETSEnrichTargetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETSEnrichTarget {
    return new Contract(address, _abi, signerOrProvider) as ETSEnrichTarget;
  }
}
