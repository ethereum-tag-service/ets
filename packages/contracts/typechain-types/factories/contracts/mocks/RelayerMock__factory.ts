/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RelayerMock,
  RelayerMockInterface,
} from "../../../contracts/mocks/RelayerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IETS",
        name: "_ets",
        type: "address",
      },
      {
        internalType: "contract IETSToken",
        name: "_etsToken",
        type: "address",
      },
      {
        internalType: "contract IETSTarget",
        name: "_etsTarget",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "RelayerOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "RelayerPauseToggledByOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "IID_IETSRELAYER",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "targetURI",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "tagStrings",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "recordType",
            type: "string",
          },
        ],
        internalType: "struct IETS.TaggingRecordRawInput[]",
        name: "_rawParts",
        type: "tuple[]",
      },
    ],
    name: "applyTags",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "targetURI",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "tagStrings",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "recordType",
            type: "string",
          },
        ],
        internalType: "struct IETS.TaggingRecordRawInput",
        name: "_rawInput",
        type: "tuple",
      },
      {
        internalType: "enum IETS.TaggingAction",
        name: "_action",
        type: "uint8",
      },
    ],
    name: "computeTaggingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tagCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ets",
    outputs: [
      {
        internalType: "contract IETS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "etsTarget",
    outputs: [
      {
        internalType: "contract IETSTarget",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "etsToken",
    outputs: [
      {
        internalType: "contract IETSToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_tags",
        type: "string[]",
      },
    ],
    name: "getOrCreateTagIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_tagIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayerName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "targetURI",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "tagStrings",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "recordType",
            type: "string",
          },
        ],
        internalType: "struct IETS.TaggingRecordRawInput[]",
        name: "_rawParts",
        type: "tuple[]",
      },
    ],
    name: "removeTags",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "targetURI",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "tagStrings",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "recordType",
            type: "string",
          },
        ],
        internalType: "struct IETS.TaggingRecordRawInput[]",
        name: "_rawParts",
        type: "tuple[]",
      },
    ],
    name: "replaceTags",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c1138038062000c118339810160408190526200003491620001f3565b6200003f33620000ac565b6000805460ff60a01b19169055600180546001600160a01b038088166001600160a01b03199283161790925560028054878416908316179055600380548684169083161790556004805492851692909116919091179055620000a181620000fc565b505050505062000273565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001066200017f565b6001600160a01b038116620001715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200017c81620000ac565b50565b6000546001600160a01b03163314620001db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000168565b565b6001600160a01b03811681146200017c57600080fd5b600080600080600060a086880312156200020c57600080fd5b85516200021981620001dd565b60208701519095506200022c81620001dd565b60408701519094506200023f81620001dd565b60608701519093506200025281620001dd565b60808701519092506200026581620001dd565b809150509295509295909350565b61098e80620002836000396000f3fe6080604052600436106101805760003560e01c80635edab3ed116100d65780638da5cb5b1161007f578063b187bd2611610059578063b187bd26146103e1578063f2fde38b146103f5578063f8c8ef091461041557600080fd5b80638da5cb5b1461036c578063a3f4df7e1461038a578063a6f9dae1146103c157600080fd5b8063743b7b1f116100b0578063743b7b1f146103235780638456cb5914610357578063893d20e8146101f257600080fd5b80635edab3ed146102ae578063613facdd146102d1578063715018a61461030e57600080fd5b806315ccda221161013857806346ca0f4d1161011257806346ca0f4d1461024f57806356c634891461026f5780635c975abb1461028f57600080fd5b806315ccda221461021a5780633f4ba83a1461023a57806342a7bfa51461020657600080fd5b80630ee2cb10116101695780630ee2cb10146101f25780630f9becab146102065780631002bc831461020657600080fd5b806301ffc9a71461018557806302d05d3f146101ba575b600080fd5b34801561019157600080fd5b506101a56101a036600461077c565b61044e565b60405190151581526020015b60405180910390f35b3480156101c657600080fd5b506004546101da906001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b3480156101fe57600080fd5b5060006101da565b6102186102143660046107f9565b5050565b005b34801561022657600080fd5b506001546101da906001600160a01b031681565b34801561024657600080fd5b5061021861049e565b34801561025b57600080fd5b506002546101da906001600160a01b031681565b34801561027b57600080fd5b506003546101da906001600160a01b031681565b34801561029b57600080fd5b50600054600160a01b900460ff166101a5565b6102c46102bc3660046107f9565b606092915050565b6040516101b1919061083b565b3480156102dd57600080fd5b5060408051808201909152600b81526a52656c617965724d6f636b60a81b60208201525b6040516101b1919061087f565b34801561031a57600080fd5b506102186104b0565b34801561032f57600080fd5b5061033e63b050394f60e01b81565b6040516001600160e01b031990911681526020016101b1565b34801561036357600080fd5b506102186104c2565b34801561037857600080fd5b506000546001600160a01b03166101da565b34801561039657600080fd5b506103016040518060400160405280600b81526020016a52656c617965724d6f636b60a81b81525081565b3480156103cd57600080fd5b506102186103dc3660046108d4565b6104d2565b3480156103ed57600080fd5b5060006101a5565b34801561040157600080fd5b506102186104103660046108d4565b6104dd565b34801561042157600080fd5b506104396104303660046108fd565b50600091829150565b604080519283526020830191909152016101b1565b60006001600160e01b0319821663b050394f60e01b148061049857507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6104a661056f565b6104ae6105c9565b565b6104b861056f565b6104ae600061061e565b6104ca61056f565b6104ae610686565b6104da6106c9565b50565b6104e561056f565b6001600160a01b0381166105665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104da8161061e565b6000546001600160a01b031633146104ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055d565b6105d16106c9565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61068e610722565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586106013390565b600054600160a01b900460ff166104ae5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161055d565b600054600160a01b900460ff16156104ae5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161055d565b60006020828403121561078e57600080fd5b81356001600160e01b0319811681146107a657600080fd5b9392505050565b60008083601f8401126107bf57600080fd5b50813567ffffffffffffffff8111156107d757600080fd5b6020830191508360208260051b85010111156107f257600080fd5b9250929050565b6000806020838503121561080c57600080fd5b823567ffffffffffffffff81111561082357600080fd5b61082f858286016107ad565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561087357835183529284019291840191600101610857565b50909695505050505050565b600060208083528351808285015260005b818110156108ac57858101830151858201604001528201610890565b818111156108be576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156108e657600080fd5b81356001600160a01b03811681146107a657600080fd5b6000806040838503121561091057600080fd5b823567ffffffffffffffff81111561092757600080fd5b83016060818603121561093957600080fd5b915060208301356003811061094d57600080fd5b80915050925092905056fea2646970667358221220f43e6b138b4fad1f7aedde18369b6dbfdd3a2ee44057091c392a6ecf74e242ea64736f6c634300080c0033";

type RelayerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerMock__factory extends ContractFactory {
  constructor(...args: RelayerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ets: AddressLike,
    _etsToken: AddressLike,
    _etsTarget: AddressLike,
    _creator: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _ets,
      _etsToken,
      _etsTarget,
      _creator,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    _ets: AddressLike,
    _etsToken: AddressLike,
    _etsTarget: AddressLike,
    _creator: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _ets,
      _etsToken,
      _etsTarget,
      _creator,
      _owner,
      overrides || {}
    ) as Promise<
      RelayerMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RelayerMock__factory {
    return super.connect(runner) as RelayerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerMockInterface {
    return new Interface(_abi) as RelayerMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RelayerMock {
    return new Contract(address, _abi, runner) as unknown as RelayerMock;
  }
}
