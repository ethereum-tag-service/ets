interface Target {
  id: ID!
  timestamp: BigInt!
}

type NFT_EVM implements Target @entity {
  id: ID!
  timestamp: BigInt!
  nftContract: Bytes!
  nftId: String!
  nftContractName: String
  nftTokenUri: String
  nftName: String
  nftDescription: String
  nftImage: String
  nftChainId: BigInt!
  ipfsHash: String
}

#rename to tag
type Tag @entity {
  id: ID!
  name: String!
  displayTag: String!
  tag: String!
  tagWithoutHash: String!
  owner: Owner!
  creator: Creator!
  publisher: Publisher!
  timestamp: BigInt!
  tagCount: BigInt!
  sponsor: Sponsor!

  #tagging revenue
  ownerRevenue: BigInt!
  publisherRevenue: BigInt!
  protocolRevenue: BigInt!
  creatorRevenue: BigInt!
}

type Tagging_Record @entity {
  id: ID!
  transaction: String!
  tag: Hashtag!
  tagger: Tagger!
  publisher: Publisher!
  target: Target!
  tagName: String!
}

type Publisher @entity {
  id: ID!
  mintCount: BigInt!
  tagCount: BigInt!
  tagFees: BigInt!
}

type Owner @entity {
  id: ID!
  mintCount: BigInt!
  tagCount: BigInt!
  tagFees: BigInt!
}

type Tagger @entity {
  id: ID!
  tagCount: BigInt!
  feesPaid: BigInt!
}

type Platform @entity {
  id: ID!
  tagFees: BigInt!
}

type Creator @entity {
  id: ID!
  mintCount: BigInt!
  tagCount: BigInt!
  tagFees: BigInt!
}

type Sponsor @entity {
  id: ID!
}