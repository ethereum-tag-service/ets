/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721BurnableMock,
  ERC721BurnableMockInterface,
} from "../ERC721BurnableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018d7380380620018d78339810160408190526200003491620001c7565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000281565b8280546200007c906200022e565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b600082601f83011262000125578081fd5b81516001600160401b03808211156200014257620001426200026b565b604051601f8301601f19908116603f011681019082821181831017156200016d576200016d6200026b565b8160405283815260209250868385880101111562000189578485fd5b8491505b83821015620001ac57858201830151818301840152908201906200018d565b83821115620001bd57848385830101525b9695505050505050565b60008060408385031215620001da578182fd5b82516001600160401b0380821115620001f1578384fd5b620001ff8683870162000114565b9350602085015191508082111562000215578283fd5b50620002248582860162000114565b9150509250929050565b6002810460018216806200024357607f821691505b602082108114156200026557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61164680620002916000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063a144819411610071578063a144819414610246578063a22cb46514610259578063b88d4fde1461026c578063c87b56dd1461027f578063e985e9c51461029257610116565b80636352211e146101f757806370a082311461020a5780638832e6e31461022b57806395d89b411461023e57610116565b806323b872dd116100e957806323b872dd1461019857806340c10f19146101ab57806342842e0e146101be57806342966c68146101d15780634f558e79146101e457610116565b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004611341565b6102ce565b60405190151581526020015b60405180910390f35b61014b610322565b60405161013a9190611429565b61016b610166366004611379565b6103b4565b6040516001600160a01b03909116815260200161013a565b6101966101913660046112c3565b61044e565b005b6101966101a63660046111e8565b610564565b6101966101b93660046112c3565b610596565b6101966101cc3660046111e8565b6105a4565b6101966101df366004611379565b6105bf565b61012e6101f2366004611379565b610639565b61016b610205366004611379565b610658565b61021d61021836600461119c565b6106cf565b60405190815260200161013a565b6101966102393660046112ec565b610756565b61014b610761565b6101966102543660046112c3565b610770565b610196610267366004611289565b61077a565b61019661027a366004611223565b610785565b61014b61028d366004611379565b6107bd565b61012e6102a03660046111b6565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102ff57506001600160e01b03198216635b5e139f60e01b145b8061031a57506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6060600080546103319061154e565b80601f016020809104026020016040519081016040528092919081815260200182805461035d9061154e565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104325760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061045982610658565b9050806001600160a01b0316836001600160a01b031614156104c75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610429565b336001600160a01b03821614806104e357506104e381336102a0565b6105555760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610429565b61055f83836108a5565b505050565b61056f335b82610913565b61058b5760405162461bcd60e51b81526004016104299061148e565b61055f838383610a0a565b6105a08282610baa565b5050565b61055f83838360405180602001604052806000815250610785565b6105c833610569565b61062d5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b6064820152608401610429565b61063681610cec565b50565b6000818152600260205260408120546001600160a01b0316151561031a565b6000818152600260205260408120546001600160a01b03168061031a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610429565b60006001600160a01b03821661073a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610429565b506001600160a01b031660009081526003602052604090205490565b61055f838383610d87565b6060600180546103319061154e565b6105a08282610dba565b6105a0338383610dd4565b61078f3383610913565b6107ab5760405162461bcd60e51b81526004016104299061148e565b6107b784848484610ea3565b50505050565b6000818152600260205260409020546060906001600160a01b031661083c5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610429565b600061085360408051602081019091526000815290565b90506000815111610873576040518060200160405280600081525061089e565b8061087d84610ed6565b60405160200161088e9291906113bd565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108da82610658565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661098c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610429565b600061099783610658565b9050806001600160a01b0316846001600160a01b031614806109d25750836001600160a01b03166109c7846103b4565b6001600160a01b0316145b80610a0257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610a1d82610658565b6001600160a01b031614610a855760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610429565b6001600160a01b038216610ae75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610429565b610af26000826108a5565b6001600160a01b0383166000908152600360205260408120805460019290610b1b90849061150b565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b499084906114df565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610c005760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610429565b6000818152600260205260409020546001600160a01b031615610c655760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610429565b6001600160a01b0382166000908152600360205260408120805460019290610c8e9084906114df565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610cf782610658565b9050610d046000836108a5565b6001600160a01b0381166000908152600360205260408120805460019290610d2d90849061150b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610d918383610baa565b610d9e6000848484610ff1565b61055f5760405162461bcd60e51b81526004016104299061143c565b6105a0828260405180602001604052806000815250610d87565b816001600160a01b0316836001600160a01b03161415610e365760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610429565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eae848484610a0a565b610eba84848484610ff1565b6107b75760405162461bcd60e51b81526004016104299061143c565b606081610efb57506040805180820190915260018152600360fc1b602082015261031d565b8160005b8115610f255780610f0f81611589565b9150610f1e9050600a836114f7565b9150610eff565b60008167ffffffffffffffff811115610f4e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610f78576020820181803683370190505b5090505b8415610a0257610f8d60018361150b565b9150610f9a600a866115a4565b610fa59060306114df565b60f81b818381518110610fc857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610fea600a866114f7565b9450610f7c565b60006001600160a01b0384163b156110f357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110359033908990889088906004016113ec565b602060405180830381600087803b15801561104f57600080fd5b505af192505050801561107f575060408051601f3d908101601f1916820190925261107c9181019061135d565b60015b6110d9573d8080156110ad576040519150601f19603f3d011682016040523d82523d6000602084013e6110b2565b606091505b5080516110d15760405162461bcd60e51b81526004016104299061143c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a02565b506001949350505050565b80356001600160a01b038116811461031d57600080fd5b600082601f830112611125578081fd5b813567ffffffffffffffff80821115611140576111406115e4565b604051601f8301601f19908116603f01168101908282118183101715611168576111686115e4565b81604052838152866020858801011115611180578485fd5b8360208701602083013792830160200193909352509392505050565b6000602082840312156111ad578081fd5b61089e826110fe565b600080604083850312156111c8578081fd5b6111d1836110fe565b91506111df602084016110fe565b90509250929050565b6000806000606084860312156111fc578081fd5b611205846110fe565b9250611213602085016110fe565b9150604084013590509250925092565b60008060008060808587031215611238578081fd5b611241856110fe565b935061124f602086016110fe565b925060408501359150606085013567ffffffffffffffff811115611271578182fd5b61127d87828801611115565b91505092959194509250565b6000806040838503121561129b578182fd5b6112a4836110fe565b9150602083013580151581146112b8578182fd5b809150509250929050565b600080604083850312156112d5578182fd5b6112de836110fe565b946020939093013593505050565b600080600060608486031215611300578283fd5b611309846110fe565b925060208401359150604084013567ffffffffffffffff81111561132b578182fd5b61133786828701611115565b9150509250925092565b600060208284031215611352578081fd5b813561089e816115fa565b60006020828403121561136e578081fd5b815161089e816115fa565b60006020828403121561138a578081fd5b5035919050565b600081518084526113a9816020860160208601611522565b601f01601f19169290920160200192915050565b600083516113cf818460208801611522565b8351908301906113e3818360208801611522565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061141f90830184611391565b9695505050505050565b60006020825261089e6020830184611391565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156114f2576114f26115b8565b500190565b600082611506576115066115ce565b500490565b60008282101561151d5761151d6115b8565b500390565b60005b8381101561153d578181015183820152602001611525565b838111156107b75750506000910152565b60028104600182168061156257607f821691505b6020821081141561158357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561159d5761159d6115b8565b5060010190565b6000826115b3576115b36115ce565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461063657600080fdfea2646970667358221220cc287a038861704096925e4d5df5ecf45edf5b8ba0152bb11354beb857bd06c364736f6c63430008020033";

export class ERC721BurnableMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721BurnableMock> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC721BurnableMock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): ERC721BurnableMock {
    return super.attach(address) as ERC721BurnableMock;
  }
  connect(signer: Signer): ERC721BurnableMock__factory {
    return super.connect(signer) as ERC721BurnableMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BurnableMockInterface {
    return new utils.Interface(_abi) as ERC721BurnableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721BurnableMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721BurnableMock;
  }
}
