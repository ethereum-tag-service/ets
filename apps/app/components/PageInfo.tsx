import useTranslation from "next-translate/useTranslation";
import Breadcrumbs from "nextjs-breadcrumbs2";
import { pathToTitle } from "@app/utils/titleUtils";
import { BreadcrumbItem } from "@app/components/BreadcrumbItem";
import PageTitle from "@app/components/PageTitle";
import { Truncate } from "@app/components/Truncate";

/**
 * @description Provides a page title and breadcrumbs for the current page, using the
 * `useTranslation` hook to retrieve translation strings and `pathToTitle` to convert
 * a path to a human-readable title.
 * 
 * @returns { HTML division element containing various elements for page navigation
 * and a page title } a React component that displays breadcrumbs and a page title.
 * 
 * 	* `Breadcrumbs`: A component that renders breadcrumbs with customizable styles.
 * The `rootLabel` is translated using the `useTranslation` hook, and the `transformLabel`
 * function is used to truncate the title and make it clickable.
 * 	* `PageTitle`: A component that renders a page title. The `title` property passed
 * to this component is generated by calling the `pathToTitle` function.
 */
export default function PageInfo() {
  const { t } = useTranslation("common");
  const title = pathToTitle();

  return (
    <>
      <div className="col-span-12 hidden lg:block">
        {/**
         * @description Generates high-quality documentation for code given to it.
         * 
         * @param { string } rootLabel - main label for the breadcrumb navigation.
         * 
         * @param { `title`. } transformLabel - transformed title of the breadcrumb item,
         * which is created by applying a transformation to the original label text using a
         * provided function.
         * 
         * 	* `rootLabel`: The label for the root breadcrumb item. It is a string and its
         * value is determined by the `rootLabel` prop.
         * 	* `transformLabel`: A callback function that transforms the label for each
         * breadcrumb item. It takes the title of the current breadcrumb item as an argument
         * and returns the transformed label as a ReactNode.
         * 		+ `Truncate`: The truncated string length is used to determine the maximum length
         * of the label. If the title is longer than this, it will be cut off.
         * 		+ `BreadcrumbItem`: This is the component used to render each breadcrumb item.
         * It takes the `title` prop as an argument and renders a span element with the label
         * inside.
         * 		+ `opacity-50`: The opacity of the inactive breadcrumb items is set to 50 by default.
         * 		+ `pointer-events-none`: Disables mouse events for inactive breadcrumb items by
         * default.
         * 		+ `listClassName`: The CSS class name used to style the breadcrumb list element.
         * It is a string and its value is determined by the `listClassName` prop.
         * 	* `inactiveItemClassName`: The CSS class name used to style the inactive breadcrumb
         * items. It is a string and its value is determined by the `inactiveItemClassName`
         * prop.
         * 
         * @param { `className`. } inactiveItemClassName - className to apply to the breadcrumb
         * item when it is inactive or not the
         * current page, with the purpose of visually distinguishing it from the
         * active item.
         * 
         * 	* `inactiveItemClassName`: This is a string attribute that specifies the CSS class
         * name for the inactive breadcrumb item. The class name should be used to apply
         * styling to the breadcrumb item when it is not active.
         * 	* `className`: This is an optional attribute that allows you to specify a custom
         * class name for the breadcrumb item. This can be useful if you want to apply specific
         * styles to the breadcrumb item without using the built-in classes provided by
         * Material UI.
         * 	* `style`: This is an object attribute that allows you to specify custom styles
         * for the breadcrumb item. You can use this property to override any default styling
         * applied by Material UI.
         * 
         * 	In summary, `inactiveItemClassName` is a property that defines the CSS class name
         * for the inactive breadcrumb item, while `className` and `style` are optional
         * attributes that allow you to specify custom styles for the breadcrumb item.
         * 
         * @param { string } activeItemClassName - CSS class to apply to the breadcrumb item
         * when it is currently active, and it is used to distinguish the active item from
         * other non-active items in the list.
         * 
         * @param { string } listClassName - class name to apply to the list of breadcrumb
         * items when it is inactive or has no active item.
         * 
         * @param { boolean } useDefaultStyle - whether or not to apply default styles to the
         * breadcrumb list, such as margin and padding.
         */}
        <Breadcrumbs
          rootLabel={t("explorer")}
          transformLabel={(title) => {
            return <BreadcrumbItem title={Truncate(title)} />;
          }}
          inactiveItemClassName={"text-sm font-medium link-primary capitalize"}
          activeItemClassName={"text-sm font-medium opacity-50 pointer-events-none"}
          listClassName={"flex items-center space-x-2 truncate"}
          useDefaultStyle={false}
        />
      </div>
      <PageTitle title={title} />
    </>
  );
}
