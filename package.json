{
  "name": "@ethereum-tag-service/monorepo",
  "author": "Ethereum Tag Service <team@ets.xyz>",
  "private": true,
  "packageManager": "pnpm@9.9.0",
  "keywords": ["ethereum", "react", "ets", "tag", "tagging"],
  "scripts": {
    "bun": "pnpm exec bun",
    "biome": "pnpm exec biome",
    "build": "pnpm run clean && turbo run build --filter=@ethereum-tag-service/site --filter=@ethereum-tag-service/app --env-mode=loose",
    "build:offchain-api": "NODE_ENV=development pnpm install && pnpm turbo run build --filter=@ethereum-tag-service/offchain-api^... && cd apps/offchain-api && NODE_ENV=development pnpm build",
    "changeset:build": "pnpm run --recursive --filter \"./packages/**\" build",
    "changeset:prepublish": "pnpm version:update && pnpm changeset:build && bun ./scripts/formatPackageJson.ts",
    "changeset:publish": "pnpm changeset:prepublish && changeset publish",
    "changeset:version": "changeset version && pnpm format && pnpm version:update",
    "clean": "pnpm run --r --parallel clean && rm -rf packages/**/*.json.tmp",
    "clean:modules": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
    "create-tag:build": "cd examples/create-tag && pnpm run build",
    "create-tag:dev": "cd examples/create-tag && pnpm run dev",
    "create-tagging-record:build": "cd examples/create-tagging-record && pnpm run build",
    "create-tagging-record:dev": "cd examples/create-tagging-record && pnpm run dev",
    "dev": "turbo run dev --env-mode=loose --filter=!./examples/*",
    "format": "biome format --write",
    "graph:deploy": "cd packages/subgraph && pnpm run deploy",
    "graph:node-clean": "cd packages/subgraph && pnpm run clean-graph-node",
    "graph:node-start": "cd packages/subgraph && pnpm run start-graph-node",
    "graph:node-stop": "cd packages/subgraph && pnpm run remove-graph-node",
    "hardhat:build": "cd packages/contracts && pnpm run build",
    "hardhat:clean": "cd packages/contracts && pnpm hardhat:clean",
    "hardhat:compile": "cd packages/contracts && pnpm run compile",
    "hardhat:deploy": "cd packages/contracts && pnpm run deploy",
    "hardhat:solhint": "cd packages/contracts && pnpm run solhint",
    "hardhat:start": "cd packages/contracts && pnpm run hardhat",
    "hardhat:test": "cd packages/contracts && pnpm run test",
    "hardhat:watch": "cd packages/contracts && pnpm run watch",
    "lint": "biome check --fix",
    "lint:repo": "sherif --ignore-rule multiple-dependency-versions",
    "lint:unused": "pnpm clean && knip",
    "setup-fork": "bun ./scripts/setupFork.ts",
    "start-graph-node": "cd scripts && ./start-graph-node.sh",
    "test:build": "pnpm run --r --parallel test:build",
    "version:update": "bun ./scripts/updateVersion.ts"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.8.3",
    "@changesets/changelog-github": "^0.5.0",
    "@changesets/cli": "^2.27.7",
    "@types/bun": "^1.1.14",
    "@types/node": "^20.12.7",
    "bun": "^1.1.37",
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.3.0",
    "glob": "^10.3.12",
    "knip": "^5.40.0",
    "node-fetch": "2",
    "publint": "^0.2.10",
    "sherif": "^0.11.0",
    "simple-git-hooks": "^2.11.1",
    "turbo": "^2.0.10",
    "typescript": "^5.7.2",
    "yaml": "2.4.5"
  },
  "pnpm": {
    "overrides": {
      "@types/react": "18.2.12",
      "@types/react-dom": "18.2.5",
      "@wagmi/core": "^2.6.5",
      "i18next": "^23.14.0",
      "@rainbow-me/rainbowkit": "^2.1.1",
      "next-auth": "^4.21.0",
      "viem": "2.21.11",
      "abitype": "1.0.5"
    }
  },
  "engines": {
    "npm": ">=7.0.0",
    "node": ">=14.0.0"
  },
  "simple-git-hooks": {
    "post-checkout": "pnpm bun run ./scripts/validateUpstreamBranch.ts post-checkout",
    "pre-commit": "pnpm bun run ./scripts/validateUpstreamBranch.ts pre-commit && pnpm lint && pnpm lint:repo"
  },
  "knip": {
    "ignore": ["**/hardhat.config.js", "packages/**/src/version.ts"],
    "ignoreDependencies": ["bun"],
    "ignoreBinaries": [],
    "ignoreWorkspaces": [
      "examples/**",
      "apps/app",
      "apps/site",
      "apps/oracle",
      "apps/offchain-api",
      "packages/brand",
      "packages/contracts",
      "packages/tsconfig"
    ],
    "workspaces": {
      ".": {
        "entry": ["scripts/*.js", "scripts/*.*.ts"],
        "project": "scripts/**/*.ts"
      },
      "packages/sdk-core": {
        "entry": ["src/index.ts!"],
        "project": ["src/**/*.ts!"]
      },
      "packages/sdk-react-hooks": {
        "entry": ["src/**/*.ts!"],
        "project": ["src/**/*.ts!"]
      },
      "packages/subgraph-endpoints": {
        "entry": ["src/**/*.ts!"],
        "project": ["src/**/*.ts!"]
      },
      "packages/subgraph": {
        "entry": ["src/**/*.ts!"],
        "project": ["src/**/*.ts!"]
      },
      "apps/offchain-api": {
        "entry": ["src/index.ts!", "scripts/mint-ar-local.ts"],
        "project": ["src/**/*.ts!"],
        "excludeEntryComponents": false
      }
    }
  }
}
